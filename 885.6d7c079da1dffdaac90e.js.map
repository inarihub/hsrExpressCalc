{"version":3,"file":"885.6d7c079da1dffdaac90e.js","mappings":"8JACA,QAAyE,WCAzE,EAAqD,WAArD,EAA0E,WAA1E,EAAiG,WCEpFA,GAAU,IAAAC,OAAMC,IACzB,MAAMC,EAAW,CAAC,SAAU,WAAY,WACxC,OAAQ,UAAM,MAAO,CAAEC,UDJG,WCI6BC,SAAU,EAAC,UAAM,MAAO,CAAED,UAAW,EAAmBC,SAAU,EAAC,SAAK,IAAK,CAAED,UAAW,EAAiBC,SAAUF,EAAS,MAAO,SAAK,IAAK,CAAEC,UAAW,EAAmBC,SAAUH,EAAMI,OAAO,SAAW,UAAM,MAAO,CAAEF,UAAW,EAAmBC,SAAU,EAAC,SAAK,IAAK,CAAED,UAAW,EAAiBC,SAAUF,EAAS,MAAO,SAAK,IAAK,CAAEC,UAAW,EAAmBC,SAAUH,EAAMI,OAAO,SAAW,UAAM,MAAO,CAAEF,UAAW,EAAmBG,MAAO,CAAEC,aAAc,QAAUH,SAAU,EAAC,SAAK,IAAK,CAAED,UAAW,EAAiBC,SAAUF,EAAS,MAAO,SAAK,IAAK,CAAEC,UAAW,EAAmBC,SAAUH,EAAMI,OAAO,UAAc,IACzrB,SAAUG,EAAMC,GACf,OAAID,EAAKH,OAAO,KAAOI,EAAKJ,OAAO,IAAMG,EAAKH,OAAO,KAAOI,EAAKJ,OAAO,IAAMG,EAAKH,OAAO,KAAOI,EAAKJ,OAAO,EAIjH,ICVA,EAAuG,W,aCAvG,MCDMK,EAAa,CACfC,WAAY,iBACZC,OAAQ,cACRC,MAAO,YACPC,QAAS,WACTC,OAAQ,UACRC,QAAS,WACTC,QAAS,WACTC,OAAQ,UACRC,QAAS,WACTC,YAAa,OACbC,WAAY,MACZC,YAAa,OACbC,aAAc,cACdC,YAAa,OACbC,UAAW,aACXC,OAAQ,WAENC,EAAc,CAChBC,IAAK,QACLC,IAAK,OACLC,IAAK,UACLC,aAAc,iBACdC,aAAc,iBACdC,iBAAkB,kBAClBC,iBAAkB,a,sBClBf,MAAMC,GAAU,IAAAnC,OAAK,SAAiBC,GACzC,MAAMmC,GAAa,QAAUnC,EAAMoC,UACnC,IAAIC,EAAQF,EAAaG,YAA0B,IAAdtC,EAAMqC,OAAaE,QAAQ,IAAMvC,EAAMqC,MAC5E,MAAMG,GAAW,IAAAC,QAAO,MAWlBC,EDMV,SAAgBC,GACZ,OAAmD,IAA3CC,OAAOC,KAAKpC,GAAaqC,QAAQH,EAC7C,CAOQI,CADiBJ,ECdE3C,EAAMoC,UDgBlB3B,EAAWkC,GAN1B,SAAiBA,GACb,OAAoD,IAA5CC,OAAOC,KAAKnB,GAAcoB,QAAQH,EAC9C,CAMQK,CAAQL,GACDjB,EAAYiB,GAEhB,OCpBDM,EAAcd,GAAa,SAAKe,EAAA,EAAiB,CAAC,IAAK,SAAK,EAAAC,SAAU,CAAC,GACvEC,EAAqBjB,OAAakB,EAAY,CAAEC,MAAO,ODYzC,IAACX,ECXrB,OAAQ,UAAM,MAAO,CAAEzC,UFvBD,WEuB6BC,SAAU,EAAC,SAAK,IAAK,CAAEA,SAAUuC,KAAU,UAAM,MAAO,CAAExC,UFvB7D,WEuB8FC,SAAU,EAAC,SAAK,QAAS,CAAEoD,IAAKf,EAAUtC,UFvBjH,WEuB+IG,MAAO+C,EAAoBI,UAbzNC,IACf,IAAyBC,gBAAgBD,EAAEd,IAAKR,IACjDsB,EAAEE,gBACN,EAUwQC,SARrPC,IACnB,MAAMC,EAAqB,IAA2BC,qBAAqBF,EAAMG,OAAO3B,MAAOF,GAC/F0B,EAAMG,OAAO3B,MAAQyB,EAAmBG,cACxCjE,EAAMkE,eAAelE,EAAMoC,SAAU0B,EAAmBK,cAAc,EAK2NC,KAAM,SAAU/B,MAAOA,IAAUY,OAC1U,IAAG,CAAC1C,EAAMC,IACFD,EAAK8B,QAAU7B,EAAK6B,OAAS9B,EAAK2D,iBAAmB1D,EAAK0D,iB,sBCpB3D,MAAMG,EAAarE,IACtB,MAAMsE,EAAUtE,EAAMuE,KAAKD,QACrBE,EAAUxE,EAAMuE,KAAKC,QACrBC,EAAUzE,EAAMuE,KAAKE,QACrBC,EAAY1E,EAAMuE,KAAKI,MACvBC,EAAY5E,EAAMuE,KAAKM,MAC7B,IAAIC,EA8BR,SAAiB1C,GACb,OAAQA,GACJ,IAAK,KACD,MAAO,CACH2C,QAAS,aACTC,KAAM,SACNC,KAAM,UAEd,IAAK,MACD,MAAO,CACHF,QAAS,cACTC,KAAM,UACNC,KAAM,WAEd,IAAK,MACD,MAAO,CACHF,QAAS,cACTC,KAAM,UACNC,KAAM,WAKtB,CArDkBC,CAAQlF,EAAMuE,KAAKC,SACjC,MAAMW,EAAoB,CAACC,EAAS/C,KAChCrC,EAAMqF,cAAc,IAAIC,EAAA,GAAUhB,EAASG,EAASD,EAAS,IAAKE,EAAW,CAACU,GAAU/C,GAASuC,GAAW,EAE1GW,EAAqB,CAACC,EAASnD,KACjCrC,EAAMqF,cAAc,IAAIC,EAAA,GAAUhB,EAASG,EAASD,EAASE,EAAW,IAAKE,EAAW,CAACY,GAAUnD,IAAS,EAEhH,IAAIoD,EAAuB,GAC3B,IAAK,MAAMnB,KAAW,KAClBmB,EAAqBC,MAAK,SAAK,SAAU,CAAErD,MAAOiC,EAASnE,SAAUmE,EAAQ,GAAGqB,cAAgBrB,EAAQsB,UAAU,IAAMtB,IAE5H,IAAIuB,EAAuB,GAC3B,IAAK,MAAMC,KAAW,IAClBD,EAAqBH,MAAK,SAAK,SAAU,CAAErD,MAAOyD,EAAS3F,SAAU2F,EAAQ,GAAGH,cAAgBG,EAAQF,UAAU,IAAME,IAE5H,IAAIC,EAAuB,GAC3B,IAAK,MAAMtB,KAAW,IAClBsB,EAAqBL,MAAK,SAAK,SAAU,CAAErD,MAAOoC,EAAStE,SAAUsE,EAAQ,GAAGkB,cAAgBlB,EAAQmB,UAAU,IAAMnB,IAE5H,OAAQ,UAAM,MAAO,CAAEvE,UJ9BK,WI8B6BC,SAAU,EAAC,SAAK,IAAK,CAAED,UJ9BhC,WI8B2DC,SAAU,gBAAiB,UAAM,UAAW,CAAED,UAAW,EAAuBC,SAAU,EAAC,SAAK,QAAS,CAAE6F,QAAS,aAAc7F,SAAU,eAAgB,SAAK,SAAU,CAAE8F,GAAI,aAAc5D,MAAOiC,EAAS4B,QAAUzC,IAC5S,MAAM0C,EAAa1C,EAAE2C,cAAc/D,MACnCrC,EAAMqF,cAAc,IAAIC,EAAA,GAAUa,EAAY1B,EAASD,EAASE,EAAWE,GAAW,EACvFzE,SAAUsF,QAA6B,UAAM,UAAW,CAAEvF,UAAW,EAAuBC,SAAU,EAAC,SAAK,QAAS,CAAE6F,QAAS,aAAc7F,SAAU,iBAAkB,SAAK,SAAU,CAAE8F,GAAI,aAAc5D,MAAOmC,EAAS0B,QAAUzC,IACtO,MAAM4C,EAAa5C,EAAE2C,cAAc/D,MACnCrC,EAAMqF,cAAc,IAAIC,EAAA,GAAUhB,EAASG,EAAS4B,EAAY3B,EAAWE,GAAW,EACvFzE,SAAU0F,QAA6B,UAAM,UAAW,CAAE3F,UAAW,EAAuBC,SAAU,EAAC,SAAK,QAAS,CAAE6F,QAAS,iBAAkB7F,SAAU,cAAe,SAAK,SAAU,CAAE8F,GAAI,iBAAkB5D,MAAOoC,EAASyB,QAAUzC,IAC3O,MAAM6C,EAAa7C,EAAE2C,cAAc/D,MACnCrC,EAAMqF,cAAc,IAAIC,EAAA,GAAUhB,EAASgC,EAAY9B,EAASE,EAAWE,GAAW,EACvFzE,SAAU4F,QAA6B,UAAM,IAAK,CAAE7F,UJvCmD,WIuCjBC,SAAU,CAAC,SAAUqE,EAAS,KAAMxE,EAAMuE,KAAKgC,sBAAuB,SAAKrE,EAAS,CAAEG,MAAOqC,EAAUI,EAAc,MAAI1C,SAAU0C,EAAc,KAAGZ,eAAgBiB,GAAqB,SAAS,SAAKjD,EAAS,CAAEG,MAAOuC,EAAUE,EAAiB,SAAI1C,SAAU0C,EAAiB,QAAGV,KAAM,UAAWF,eAAgBqB,GAAsB,YAAY,SAAKrD,EAAS,CAAEG,MAAOuC,EAAUE,EAAc,MAAI1C,SAAU0C,EAAc,KAAGZ,eAAgBqB,GAAsB,SAAS,SAAKrD,EAAS,CAAEG,MAAOqC,EAAsB,WAAGtC,SAAU,aAAcgC,KAAM,UAAWF,eAAgBiB,GAAqB,eAAe,SAAKjD,EAAS,CAAEG,MAAOuC,EAAkB,OAAGxC,SAAU,SAAUgC,KAAM,UAAWF,eAAgBqB,GAAsB,WAAW,SAAKrD,EAAS,CAAEG,MAAOuC,EAAiB,MAAGxC,SAAU,QAASgC,KAAM,UAAWF,eAAgBqB,GAAsB,UAAU,SAAKrD,EAAS,CAAEG,MAAOuC,EAAuB,YAAGxC,SAAU,cAAegC,KAAM,UAAWF,eAAgBqB,GAAsB,gBAAgB,SAAKrD,EAAS,CAAEG,MAAOuC,EAAwB,aAAGxC,SAAU,eAAgBgC,KAAM,UAAWF,eAAgBqB,GAAsB,iBAAiB,SAAKrD,EAAS,CAAEG,MAAOuC,EAAqB,UAAGxC,SAAU,YAAagC,KAAM,UAAWF,eAAgBqB,GAAsB,cAAc,SAAKrD,EAAS,CAAEG,MAAOuC,EAAkB,OAAGxC,SAAU,SAAUgC,KAAM,UAAWF,eAAgBqB,GAAsB,YAAc,E,aCpCngD,MAAMiB,EAAcxG,IACvB,MAAM2B,EAAM3B,EAAMyG,MAAM9E,IAClB8C,EAAUzE,EAAMyG,MAAMhC,QACtBE,EAAQ3E,EAAMyG,MAAM9B,MACpB+B,EAAU1G,EAAMyG,MAAMC,QACtBC,EAAW3G,EAAMyG,MAAME,SAOvBC,EAAoB,CAACC,EAAWxE,KAClCrC,EAAM8G,iBAAiB,IAAIC,EAAA,GAAMpF,EAAK8C,EAASE,EAAO,IAAK+B,EAAS,CAACG,GAAYxE,GAASsE,GAAU,EAKxG,OAAQ,UAAM,MAAO,CAAEzG,UCrBG,WDqB6BC,SAAU,EAAC,SAAK,IAAK,CAAED,UCrBhC,WDqB2DC,SAAU,YAAa,SAAK+B,EAAS,CAAEG,MAAOV,EAAKS,SAAU,MAAO8B,eAZtJ,CAAC8C,EAAQ3E,KAC5BrC,EAAM8G,iBAAiB,IAAIC,EAAA,GAAM1E,EAAOoC,EAASE,EAAO+B,EAASC,GAAU,GAWgI,QAAQ,SAAKzE,EAAS,CAAEG,MAAOsC,EAAW,IAAGvC,SAAU,MAAOgC,KAAM,UAAWF,eATrQ,CAACkB,EAAS/C,KAC/BrC,EAAM8G,iBAAiB,IAAIC,EAAA,GAAMpF,EAAK8C,EAAS,IAAKE,EAAO,CAACS,GAAU/C,GAASqE,EAASC,GAAU,GAQ4N,QAAQ,SAAKzE,EAAS,CAAEG,MAAOqE,EAAsB,aAAGtE,SAAU,eAAgBgC,KAAM,UAAWF,eAAgB0C,GAAqB,iBAAiB,SAAK1E,EAAS,CAAEG,MAAOqE,EAAsB,aAAGtE,SAAU,eAAgBgC,KAAM,UAAWF,eAAgB0C,GAAqB,iBAAiB,SAAK1E,EAAS,CAAEG,MAAOqE,EAA0B,iBAAGtE,SAAU,mBAAoBgC,KAAM,UAAWF,eAAgB0C,GAAqB,qBAAqB,UAAM,UAAW,CAAE1G,UCrB/sB,WDqBqvBC,SAAU,EAAC,SAAK,QAAS,CAAE6F,QAAS,gBAAiB7F,SAAU,sBAAuB,SAAK,QAAS,CAAE8F,GAAI,gBAAiB7B,KAAM,WAAY6C,QAASjH,EAAMyG,MAAME,SAAU/C,SAAUH,IAHz9B,IAACpB,IAIeoB,EAAE2C,cAAca,QAH3DjH,EAAM8G,iBAAiB,IAAIC,EAAA,GAAMpF,EAAK8C,EAASE,EAAO+B,EAASrE,GAGI,SACtC,EExBrC,SAAS6E,EAASC,EAASxE,EAAK2B,EAAS8C,GACrC,OAAOD,EACFE,QAAO5D,KAAKA,EAAEd,MAAQA,GACtBc,EAAE6D,iBAAmBhD,GAAWb,EAAE6D,gBAAsC,QAApB7D,EAAE6D,eACtD7D,EAAE8D,kBAAoBH,GAAe3D,EAAE8D,iBAAwC,QAArB9D,EAAE8D,kBAC5DC,KAAIC,GAAKA,EAAEpF,QACXqF,QAAO,CAACnH,EAAMoH,IAASpH,EAAOoH,GAAM,EAC7C,CAEO,MCRP,GAAgB,gBAAkB,WAAW,cAAgB,WAAW,OAAS,WAAW,WAAa,WAAW,YAAc,WAAW,UAAY,WAAW,YAAc,WAAW,mBAAqB,YCCrMC,EAAc,SACpB,SAASC,IACZ,MAAMC,EAASC,aAAaC,QAAQJ,GACpC,IAAKE,EAED,OADAG,QAAQC,IAAI,0BACL,CAAC,EAEZ,MAAMC,EAAeC,KAAKC,MAAMP,GAChC,OAAKK,GAAqD,IAArCvF,OAAOC,KAAKsF,GAAcG,OAIxCH,GAHHF,QAAQC,IAAI,0BACL,CAAC,EAGhB,CACO,SAASK,EAAaC,GACzB,MAAMjE,EAAOiE,EAAMjE,KACbkC,EAAQ+B,EAAM/B,MAGpB,MAAO,CAAElC,KAFe,IAAIe,EAAA,GAAUf,EAAKD,QAASC,EAAKE,QAASF,EAAKC,QAASD,EAAKI,MAAOJ,EAAKM,OAEjE4B,MADP,IAAIM,EAAA,GAAMN,EAAM9E,IAAK8E,EAAMhC,QAASgC,EAAM9B,MAAO8B,EAAMC,QAASD,EAAME,UAEnG,CClBA,SAAS8B,EAAoBC,GACzB,IAAKA,EACD,MAAO,GAEX,MAAMC,EAAa,GACnB,IAAK,MAAMC,KAAQhG,OAAOC,KAAK6F,GAAKG,OAChCF,EAAWjD,MAAK,SAAK,SAAU,CAAExF,UAAW,EAAQ4I,QAAS3I,SAAUyI,GAAQA,IAEnF,OAAOD,CACX,CACA,SAASI,EAAcjB,GACnB,OAAsC,IAA/BlF,OAAOC,KAAKiF,GAAQQ,MAC/B,CACO,MAAMU,GAAY,IAAAjJ,OAAMC,IAC3B,MAAMiJ,EAAcb,KAAKC,MAAMN,aAAaH,IAAgB,OACrDkB,EAASI,IAAc,IAAAC,UAASV,EAAoBQ,IACrDG,GAAe,IAAA3G,QAAO,MACtB4G,GAAc,IAAA5G,QAAO,MACrB6G,GAAY,IAAA7G,QAAO,MAoHzB,OAAQ,UAAM,MAAO,CAAEvC,UAAW,EAAQqJ,gBAAiBpJ,SAAU,EAAC,UAAM,MAAO,CAAED,UAAW,EAAQsJ,cAAerJ,SAAU,EAAC,SAAK,IAAK,CAAED,UAAW,EAAQuJ,OAAQtJ,SAAU,gBAAiB,SAAK,MAAO,CAAEoD,IAAK+F,EAAWpJ,UAAW,EAAQwJ,iBAAmB,UAAM,MAAO,CAAExJ,UAAW,EAAQyJ,YAAaxJ,SAAU,EAAC,SAAK,QAAS,CAAEoD,IAAK6F,EAAcQ,UAAW,GAAI1J,UAAW,EAAQ2J,aAAc,SAAK,SAAU,CAAEC,QAnHlZ,KAChB,MAAMC,EAAQX,EAAaY,QAC3B,GAAID,GAAyB,KAAhBA,EAAM1H,MAAc,CAC7B,IAAI4H,EAAYpC,IAChB,MAAMqC,EAAiBD,EAAUF,EAAM1H,QAAU8H,QAAQ,sDACnDC,GAAWH,EAAUF,EAAM1H,OACjC,GAAI6H,GAAkBE,EAAS,CAC3BH,EAAUF,EAAM1H,OAAS,CACrBkC,KAAMvE,EAAMuE,KAAK8F,aACjB5D,MAAOzG,EAAMyG,MAAM6D,eAEvB,MAAMC,EAAYnC,KAAKoC,UAAUP,GACjClC,aAAa0C,QAAQ7C,EAAa2C,GAClCrB,EAAWT,EAAoBwB,IAC/Bb,EAAaY,QAAQ3H,MAAQ,GAC7BiH,EAAUU,QAAQU,YAAc,QAChC,MAAMC,EAAaC,YAAW,KAC1BtB,EAAUU,QAAQU,YAAc,GAChCG,aAAaF,EAAW,GACzB,KACP,CACJ,GA8FwbxK,SAAU,aAAe,UAAM,MAAO,CAAED,UAAW,EAAQ4K,YAAa3K,SAAU,EAAC,UAAM,SAAU,CAAEoD,IAAK8F,EAAanJ,UAAW,EAAQ6K,aAAcC,SAA6B,IAAnBlC,EAAQR,OAAc2C,aAAc,GAAI9K,SAAU,EAAC,SAAK,SAAU,CAAEkC,MAAO,GAAI2I,UAAU,EAAME,QAAQ,EAAM/K,SAAU,mBAAqB2I,MAAa,UAAM,UAAW,CAAE5I,UAAW,EAAQiL,mBAAoBhL,SAAU,EAAC,SAAK,SAAU,CAAE2J,QAjFvzB,KAClB,MAAMsB,EAAW/B,EAAYW,QAC7B,IAAIC,EAAYpC,IAChB,IAAIkB,EAAckB,IAAemB,EAAS/I,OAA4B,KAAnB+I,EAAS/I,OAGxD8H,QAAQ,mBAAmBiB,EAAS/I,yCAA0C,QACvE4H,EAAUmB,EAAS/I,OAC1B,MAAMgJ,EAAajD,KAAKoC,UAAUP,GAClClC,aAAa0C,QAAQ7C,EAAayD,GAClCnC,EAAWT,EAAoBwB,GACnC,GAsEi2B9J,SAAU,YAAa,SAAK,SAAU,CAAE2J,QA5Fz3B,KAChB,MAAMsB,EAAW/B,EAAYW,QAC7B,IAAIC,EAAYpC,IAChB,GAAIkB,EAAckB,KAAemB,EAAS/I,OAA4B,KAAnB+I,EAAS/I,MACxD,OAEJ,MAAMmG,EAAQD,EAAa0B,EAAUmB,EAAS/I,QAC1CmG,EAAMjE,MAAQiE,EAAM/B,OACpBzG,EAAMsL,aAAa9C,EAAMjE,KAAMiE,EAAM/B,MACzC,EAmF+5BtG,SAAU,gBAAmB,UAAM,MAAO,CAAED,UAAW,EAAQqL,oBAAqBpL,SAAU,EAAC,SAAK,SAAU,CAAE2J,QA3Dz/B0B,MAAO3H,IAE7B,IAAI4H,EADJ5H,EAAM6H,UAEN,IACID,QDrCL,SAAyBE,GAAW,EAAOC,EAAU,IACxD,MAAM7B,EAAQ8B,SAASC,cAAc,SAKrC,IAAIC,EACJ,OALAhC,EAAM3F,KAAO,OACb2F,EAAMiC,OAAS,QACfjC,EAAM4B,SAAWA,EACjB5B,EAAMkC,QAEC,IAAIC,SAAQ,CAACC,EAASC,KACzBrC,EAAMsC,iBAAiB,UAAU,IAAMF,EAAQpC,EAAM0B,SACrD1B,EAAMsC,iBAAiB,UAAU,IAAMF,EAAQ,QAC/CJ,EAAUnB,YAAW,KAAQwB,GAAQ,GAAe,IAAVR,EAAe,IAExDU,SAAQ,KACTvC,EAAMwC,SACN1B,aAAakB,EAAQ,GAE7B,CCqB0BS,EAAgB,EAAO,IACzC,CACA,MAAO/I,GACHgJ,MAAMhJ,EACV,CACA,IAAKgI,IAAUA,EAAM,GACjB,OAEJ,IACIiB,EADAzC,EAAYpC,IAEhB,IACI6E,QD7DkBC,EC6DmBlB,EAAM,GD5D5C,IAAIS,SAAQ,CAACC,EAASC,KACzB,MAAMQ,EAAS,IAAIC,WACnBD,EAAOE,UAAarJ,IAChB,MAAMsJ,EAAUtJ,EAAEO,OAAO5D,OACzB+L,EAAQY,EAAQ,EAEpBH,EAAOI,QAAWvJ,IACd2I,EAAO3I,EAAE,EAEbmJ,EAAOK,WAAWN,EAAK,ICoDvB,CACA,MAAOlJ,GACHgJ,MAAMhJ,EACV,CDjED,IAAuBkJ,ECkEtB,GAA8B,IAA1BD,EAAepE,OAEf,YADAmE,MAAM,8BAGV,IAAItE,EACJ,IACIA,EAAeC,KAAKC,MAAMqE,EAC9B,CACA,MAAOjJ,GAEH,YADAgJ,MAAM,sBAEV,CACA,GAAItC,QAAQ,oGAAqG,CAC7G,MAAM+C,EAAiB/C,QAAQ,oFAC/B,IAAK,MAAM3B,KAASL,EAAc,CAC9B,IAAIgF,EAAS3E,EACb,IAAK0E,EAAgB,CACjB,IAAIE,EAAe,EACnB,KAAOnD,EAAUkD,IAAS,CACtB,GAAIC,EAAe,IACf,MAAM,IAAIC,MAAM,gDAEpBD,IACAD,EAAS3E,EAAM8E,OAAO,IAAKF,EAAaG,WAAY,IACxD,CACJ,CACAtD,EAAUkD,GAAUhF,EAAaK,EACrC,CACJ,KACK,CACDyB,EAAY,CAAC,EACb,IAAK,MAAMzB,KAASL,EAChB8B,EAAUzB,GAASL,EAAaK,EAExC,CACA,MAAM+B,EAAYnC,KAAKoC,UAAUP,GACjClC,aAAa0C,QAAQ7C,EAAa2C,GAClCrB,EAAWT,EAAoBwB,GAAW,EAEigC9J,SAAU,YAAa,SAAK,SAAU,CAAE2J,QApE7jC,KACtB,MAAMhC,EAASD,IACf,GAAIkB,EAAcjB,GACd,OAEJ,MAAM0F,EAAepF,KAAKoC,UAAU1C,IDpDrC,SAAyB6E,GAC5B,MAAMc,EAAMC,OAAOC,IAAIC,gBAAgBjB,GACjCkB,EAAWhC,SAASC,cAAc,KACxC+B,EAASC,aAAa,QAAS,iBAC/BD,EAASE,KAAON,EAChBI,EAASG,SAAWrB,EAAK/D,KACzBiF,EAAS5B,QACTyB,OAAOC,IAAIM,gBAAgBR,GAC3BI,EAAStB,QACb,CC6CQ2B,CADW,IAAIC,KAAK,CAACX,GAAe,cAAe,CAAEpJ,KAAM,6BACtC,EA6D0lCjE,SAAU,YAAa,SAAK,SAAU,CAAE2J,QAAS,IAAM/B,aAAaqG,QAASjO,SAAU,eAAmB,ICvIptCkO,EAAerO,IACxB,MAAOsO,EAAcC,IAAmB,IAAApF,UAAS,IAC3CqF,EAAiB/K,IACnB,MAAMpB,EAAQoB,EAAE2C,cAAc/D,MAC9B,IAAKA,EACD,MAAM,IAAIgL,MAAM,oCAChBiB,EAAaG,SAASpM,GACtBkM,GAAiBhO,GACNA,EAAK8G,QAAO5D,GAAKA,IAAMpB,MAIlCkM,GAAiBhO,GACN,IAAIA,EAAM8B,IAEzB,EAEEqM,EAAU1O,EAAM2O,SAASnH,KAAIuF,IAC/B,MAAM1M,EAAQiO,EAAaG,SAAS1B,GAAW,CAAE6B,OAAQ,wBAAsBvL,EAC/E,OAAQ,SAAK,SAAU,CAAEhB,MAAO0K,EAAS1M,MAAOA,EAAOyJ,QAAS0E,EAAerO,SAAU4M,EAAQ,GAAGpH,cAAgBoH,EAAQ8B,MAAM,IAAM9B,EAAS,IAKrJ,OAHA,IAAA+B,YAAU,KACN9O,EAAM+O,eAAeT,EAAa,GACnC,CAACA,KACI,SAAK,MAAO,CAAEpO,UC1Ba,WD0B4BC,SAAUuO,GAAW,EE1BxF,GAAgB,yBAA2B,WAAW,cAAgB,WAAW,OAAS,WAAW,cAAgB,WAAW,aAAe,WAAW,iBAAmB,YCA7K,GAAgB,kBAAoB,WAAW,cAAgB,WAAW,OAAS,WAAW,MAAQ,WAAW,OAAS,WAAW,sBAAwB,WAAW,cAAgB,WAAW,mBAAqB,WAAW,MAAQ,Y,aCIpO,MAAMM,EAAmBhP,IAC5B,MAAOiP,EAAaC,IAAkB,IAAA/F,WAAS,IACxCgG,EAAQC,IAAa,IAAAjG,WAAS,GACrC,IAAIkG,EAAkB,IACtB,IAAAP,YAAU,KACN9O,EAAMsP,kBAAkB,CAAEC,MAAOvP,EAAMuP,MAAO3G,KAAM5I,EAAM0C,OAASyM,EAAO,GAC3E,CAACA,IACJ,IAAK,MAAMK,KAASxP,EAAMyP,IAAK,CAC3B,MAAMC,EAAiBF,EAAMlI,eAAyC,QAAxBkI,EAAMlI,eAAmD,SAAxBkI,EAAMlI,cAAgC,IAAU,GAAEkI,EAAMlI,eAAvB,GAC1GqI,EAAiBH,EAAMjI,gBAA2C,QAAzBiI,EAAMjI,gBAAoD,QAAxBiI,EAAMjI,eAAgC,IAAU,GAAEiI,EAAMjI,gBAAvB,GAC5GqI,EAAgC,KAAlBF,GAA0C,KAAlBC,EAAuB,GAAK,IAAIA,KAAiBD,KACvFvN,GAAa,QAAUqN,EAAM7M,KACnC,IAAIN,EAAQF,EAAaG,YAA0B,IAAdkN,EAAMnN,OAAaE,QAAQ,IAAMiN,EAAMnN,MAC5EgN,EAAgB3J,MAAM,UAAM,MAAO,CAAExF,UAAW,EAAQsP,MAAOrP,SAAU,EAAC,UAAM,IAAK,CAAED,UAAW,EAAQ2P,UAAW1P,SAAU,CAAC,IAAK,IAAU,GAAEqP,EAAM7M,KAAM,IAAKiN,EAAa,QAAS,UAAM,IAAK,CAAE1P,UAAW,EAAQ4P,WAAY3P,SAAU,CAACkC,EAAOF,EAAa,IAAM,QAAWqN,EAAM7M,IAAM6M,EAAMvJ,GAAK,UAC/S,CACA,OAAQ,UAAM,MAAO,CAAE/F,UAAW,EAAQ6P,kBAAmB5P,SAAU,EAAC,UAAM,MAAO,CAAED,UAAW,EAAQsJ,cAAerJ,SAAU,EAAC,UAAM,MAAO,CAAED,UAAW,EAAQ8P,OAAQ7P,SAAU,EAAC,UAAM,IAAK,CAAED,UAAW,EAAQqP,MAAOpP,SAAU,CAAC,IAAU,GAAEH,EAAMuP,OAAQvP,EAAMuP,OAAOjH,OAAS,EAAI,IAAM,OAAQ,SAAK,IAAK,CAAEpI,UAAW,EAAQuJ,OAAQtJ,SAAUH,EAAM0C,YAAc,UAAM,MAAO,CAAExC,UAAW,EAAQ+P,sBAAuB9P,SAAU,EAAC,SAAK,SAAU,CAAEuC,MAAO,oCAAqCrC,MAAO8O,OAAS9L,EAAY,CAAE6M,gBAAiB,WAAahQ,UAAW,EAAQiQ,cAAerG,QAASrG,GAAK2L,GAAU7O,IAASA,IAAOJ,SAAU,MAAkB,qBAAqB,SAAK,SAAU,CAAEuC,MAAO,8BAA+BxC,UAAW,EAAQiQ,cAAerG,QAASrG,GAAKyL,GAAgB3O,IAAUA,IAAOJ,SAAU,OAAS,mBAAmB,SAAK,SAAU,CAAEuC,MAAO,oBAAqBxC,UAAW,EAAQiQ,cAAerG,QAASrG,GAAKzD,EAAMoQ,eAAepQ,EAAMuP,MAAOvP,EAAM0C,OAAQvC,SAAU,KAAO,sBAAyB8O,GAAc,SAAK,EAAA9L,SAAU,CAAC,IAAM,SAAK,MAAO,CAAEjD,UAAW,EAAQmQ,mBAAoBlQ,SAAUkP,MAAwB,E,sBCJ9oC,SAASiB,EAAkBC,EAAW3H,GAClC,MAAO,GAAG2H,OAAe3H,GAC7B,CACO,MAAM4H,EAAsBxQ,IAC/B,MAAOyQ,EAASC,IAAc,IAAAvH,UAAS,IACjCE,GAAc,IAAA5G,QAAO,MACrBkO,GAAe,IAAAC,sBAmBfC,EAAgB,CAACN,EAAWlO,KAC9B,GAAyB,IAArBkO,EAAUjI,QAAiC,IAAjBjG,EAAMiG,OAChC,OACJ,MAAMwI,EAAU,IAAIC,IAAI/Q,EAAMgR,WAC1BF,EAAQG,OAAOX,EAAkBC,EAAWlO,KAC5CrC,EAAM+O,eAAe+B,EACzB,EAOEI,GAAuB,QAAsBP,EAAcF,IAAY,GAC7E,IAAIU,EAAmB,GAOvB,OANAnR,EAAMgR,UAAUI,SAAQ,CAACC,EAAU1O,KAC/B,MAAM,UAAE4N,EAAS,KAAE3H,GAlD3B,SAA0BvG,GACtB,IAAKA,GAAmB,KAAVA,EACV,MAAM,IAAIgL,MAAM,yBACpB,MAAMiE,EAAYjP,EAAMkP,MAAM,OAC9B,GAAyB,IAArBD,EAAUhJ,OACV,MAAM,IAAI+E,MAAM,yBAEpB,MAAO,CAAEkD,UAAWe,EAAU,GAAI1I,KAAM0I,EAAU,GACtD,CA0CoCE,CAAiB7O,GACxC8N,IAAWA,EAAQhC,SAAS8B,IAAiC,IAAnBE,EAAQnI,QACnD6I,EAAiBzL,MAAM,SAAKsJ,EAAiB,CAAEtM,MAAOkG,EAAM2G,MAAOgB,EAAWd,IAAK4B,EAAUjB,eAAgBS,EAAevB,kBAAmBtP,EAAMsP,mBAAqB3M,GAC9K,KAEI,UAAM,MAAO,CAAEzC,UAAW,EAAQuR,yBAA0BtR,SAAU,EAAC,SAAK,MAAO,CAAED,UAAW,EAAQsJ,cAAerJ,UAAU,SAAK,IAAK,CAAED,UAAW,EAAQuJ,OAAQtJ,SAAU,gBAAkB,UAAM,MAAO,CAAED,UAAW,EAAQwR,cAAevR,SAAU,EAAC,UAAM,SAAU,CAAEoD,IAAK8F,EAAanJ,UAAW,EAAQyQ,aAAc3F,SAA0C,IAAhCkG,EAAqB5I,OAAcnI,SAAU,EAAC,SAAK,SAAU,CAAE+K,QAAQ,EAAM7I,MAAO,OAAQlC,SAA0C,IAAhC+Q,EAAqB5I,OAAe,qBAAuB,uBAAyB,eAAgB4I,MAA0B,UAAM,MAAO,CAAEhR,UAAW,EAAQyR,qBAAsBxR,SAAU,EAAC,SAAK,SAAU,CAAE2J,QApC3nB,KAChB,MAAMsB,EAAW/B,EAAYW,QAC7B,GAAIoB,EAAU,CACV,MAAM,UAAEmF,EAAS,MAAElO,IAAU,QAA0B+I,GACjDzI,EAAM2N,EAAkBC,EAAWlO,GACzC,GAAIkO,GAAalO,GAASsO,EAAaiB,IAAIrB,GAAY,CACnD,MAAMsB,EAAclB,EAAaiB,IAAIrB,GAAWlO,GAChD,GAAIwP,IAAgB7R,EAAMgR,UAAUY,IAAIjP,GAAM,CAC1C,MAAMmO,EAAU,IAAIC,IAAI/Q,EAAMgR,WAC9BF,EAAQrB,IAAI9M,EAAKkP,GACjB7R,EAAM+O,eAAe+B,EACzB,CACJ,CACJ,GAuBiqB3Q,SAAU,UAAW,SAAK,SAAU,CAAE2J,QAbtrB,KACY,IAAzB9J,EAAMgR,UAAUc,MAChB9R,EAAM+O,eAAe,IAAIgC,IAC7B,EAU8tB5Q,SAAU,iBAAoB,SAAKkO,EAAa,CAAEM,SAAU,CAAC,SAAU,WAAY,SAAU,WAAYI,eAvCpzB0B,IACnBC,EAAWD,EAAQ,KAsCs1B,SAAK,MAAO,CAAEvQ,UAAW,EAAQ6R,iBAAkB5R,SAAUgR,MAAwB,EClDh8Ba,EAAgB,mBACtB,IAAIC,EACJ,WACI,MAAMC,EAAcnK,aAAaC,QAAQgK,GACnCG,EAAmBD,EAAc9J,KAAKC,MAAM6J,GAAe,CAAC,EAClE,GAA6C,IAAzCtP,OAAOC,KAAKsP,GAAkB7J,OAAc,CAC5C,MAAME,EAAQD,EAAa4J,GAC3B,MAAO,CAAE5N,KAAMiE,EAAMjE,MAAQ,IAAIe,EAAA,GAAamB,MAAO+B,EAAM/B,OAAS,IAAIM,EAAA,GAASI,QAAS,IAAI4J,IAAIoB,EAAiBhL,UAAY,IAAI4J,IAAOqB,UAAWD,EAAiBC,WAAa,GACvL,CACA,MAAO,CAAE7N,KAAM,IAAIe,EAAA,GAAamB,MAAO,IAAIM,EAAA,GAASI,QAAS,IAAI4J,IAAOqB,UAAW,GACvF,CATuBC,GAUvB,MAwGA,EAxGgB,KACZ,MAAO9N,EAAM+N,IAAW,IAAAnJ,UAAS8I,EAAiB1N,OAC3CkC,EAAO8L,IAAY,IAAApJ,UAAS8I,EAAiBxL,QAC7CuK,EAAWwB,IAAgB,IAAArJ,UAAS8I,EAAiB9K,UACrDsL,EAAiBC,IAAsB,IAAAvJ,UAAS8I,EAAiBG,WACxE,IAAIO,GAAU,IAAAlQ,QAAO8B,GACjBqO,GAAW,IAAAnQ,QAAOgE,GAClBoM,GAAW,IAAApQ,QAAOuO,GAClB8B,GAAe,IAAArQ,QAAOgQ,GAC1B,SAASM,IACL,MAAMC,EAAUL,EAAQ3I,SAASK,aAC3B4I,EAAWL,EAAS5I,SAASM,cAC7B4I,EAAW,IAAIL,EAAS7I,SACxBmJ,EAAe,IAAIL,EAAa9I,SACtCjC,aAAa0C,QAAQuH,EAAe5J,KAAKoC,UAAU,CAAEjG,KAAMyO,EAASvM,MAAOwM,EAAUzD,MAAO0D,EAAUd,UAAWe,IACrH,CAiBA,SAASC,EAAmBC,GACxBf,GAAQ,IACGe,GAEf,CAEA,SAASC,EAAoBC,GACzBhB,GAAS,IACEgB,GAEf,EA1BA,IAAAzE,YAAU,KACNpB,OAAOrB,iBAAiB,gBAAgB5I,IACpCsP,GACM,IAEH,KACHA,IACAd,EAAmB,CAAE1N,KAAMoO,EAAQ3I,QAASvD,MAAOmM,EAAS5I,QAAS7C,QAAS0L,EAAS7I,QAASoI,UAAWU,EAAa9I,QAAS,IAEtI,KACH,IAAA8E,YAAU,KACN6D,EAAQ3I,QAAUzF,EAClBqO,EAAS5I,QAAUvD,EACnBoM,EAAS7I,QAAUgH,EACnB8B,EAAa9I,QAAUyI,CAAe,IAyC1C,MAAMe,EAAa,GACnBxC,EAAUI,SAAQ,CAAC3B,EAAK9M,KACpB,MAAO4M,EAAO3G,GAAQjG,EAAI4O,MAAM,YAC8ClO,IAA1EoP,EAAgBgB,MAAK/K,GAAOA,EAAI6G,QAAUA,GAAS7G,EAAIE,OAASA,KAChE4K,EAAW9N,QAAQ+J,EACvB,IAEJ,MAAMrP,EV5Fe,EAACsT,EAAWjN,EAAOU,KACxC,IAAKuM,IAAcjN,IAAUU,EACzB,MAAO,CAAC,EAAG,EAAG,GAElB,MAAMzC,EAAYgP,EAAU/O,MACtBC,EAAY8O,EAAU7O,MACtB8O,EAAalN,EAAM9B,MACnBiP,EAAenN,EAAMC,QACrBzE,EAAmBwE,EAAME,SAAW,EAAI,GASxCkN,EAAY3M,EAASC,EAAS,OAAOuM,EAAUlP,WAC/CsP,EAAoB5M,EAASC,EAAS,GAAGuM,EAAUlP,mBACnDuP,EAAY7M,EAASC,EAAS,OAAOuM,EAAUlP,WAE/CwP,IAAYtP,EAAU,OAAOgP,EAAUlP,WAAaqP,IAAc,EAAIjP,EAAU,GAAG8O,EAAUlP,mBAAqBsP,GAAqBlP,EAAU,OAAO8O,EAAUlP,WAAauP,GAAarP,EAAUhE,WAEtMuT,EAAW/M,EAASC,EAAS,cAAeuM,EAAUpP,QAASoP,EAAUjP,SACzEyP,EAAYhN,EAASC,EAAS,eAAgBuM,EAAUpP,QAASoP,EAAUjP,SAE3E0P,EAAgB,EAAIvP,EAAUrD,YAAcqD,EAAUtD,aAAe2S,EAAWC,EAEhFE,EAAoBlN,EAASC,EAAS,gBACtCkN,EAAiBnN,EAASC,EAAS,aAEzC,IAAImN,EAAW7N,EAAM9B,MAAM9C,KAAO,GAAmB+R,EAAa9R,aAAesS,EAAoBxP,EAAUpD,UAAY6S,IACvHC,EAAW,IACXA,EAAW,GAEf,MAAMC,EAAgB,EAAKD,GAAYA,EAAW,IAAM,KAElDE,EAActN,EAASC,EAAS,SAAUuM,EAAUpP,QAASoP,EAAUjP,SACvEgQ,EAAoBvN,EAASC,EAAS,eAAgBuM,EAAUpP,QAASoP,EAAUjP,SAEzF,IAAIiQ,EAAWf,EAAW/R,KAAOgS,EAAa7R,aAAe0S,IAAsB7P,EAAUnD,OAAS+S,GAClGE,GAAY,IACZA,GAAY,GAEhB,MAAMC,EAAgB,EAAID,EAEpBE,EAAwB1N,EAASC,EAAS,mBAAoBuM,EAAUpP,QAASoP,EAAUjP,SAE3FoQ,EAAqB,EAAIjB,EAAa5R,iBAAmB4S,EAEzDE,EAAc5N,EAASC,EAAS,UAEhC4N,EAAerB,EAAU7O,MAAMlE,OAASmU,EAAe,EAAI,EAAKpB,EAAU7O,MAAMlE,OAASmU,EAEzFE,EAAa9N,EAASC,EAAS,SAE/B8N,EAAarQ,EAAUhE,MAAQoU,EAC/BE,EAAMC,KAAKC,MAAMpB,EAAUG,EAAgBI,EAAgBI,EAAgBE,EAAqB5S,GAChGoT,EAAUF,KAAKC,MAAMF,GAAO,EAAID,IAEtC,MAAO,CAAEC,EAAKG,EADCF,KAAKC,MAAMF,GAAOG,EAAUH,GAAOH,GACnB,EUgChBO,CAAU/Q,EAAMkC,EAAO+M,GACtC,OAAQ,SAAK,MAAO,CAAEtT,UpBrGU,WoBqG4BC,UAAU,UAAM,MAAO,CAAED,UpBrGpC,WoBqG4DC,SAAU,EAAC,SAAK,MAAO,CAAED,UAAW,EAAgBC,UAAU,SAAKkE,EAAW,CAAEE,KAAMA,EAAMc,cAAe+N,OAA0B,UAAM,MAAO,CAAElT,UAAW,EAAgBC,SAAU,EAAC,SAAKqG,EAAY,CAAEC,MAAOA,EAAOK,iBAAkBwM,KAAwB,SAAKxT,EAAS,CAAEM,OAAQA,KAAW,SAAK4I,EAAW,CAAEzE,KAAMA,EAAMkC,MAAOA,EAAO6E,aAnCjc,SAA0B/G,EAAMkC,GAC5B2M,EAAmB7O,GACnB+O,EAAoB7M,EACxB,QAgCwe,SAAK,MAAO,CAAEvG,UAAW,EAAgBC,UAAU,SAAKqQ,EAAoB,CAAEQ,UAAWA,EAAWjC,eA/B5kB,SAA6BwG,GACzB/C,EAAa+C,EACjB,EA6BinBjG,kBArBjnB,SAAmCkG,EAASC,GACxC/C,GAAoBnS,IAChB,GAAIkV,EAAU,CACV,MAAMC,EAAU,IAAInV,GACdoV,EAXlB,SAA+BH,EAAS/C,GACpC,OAAKmD,MAAMC,QAAQpD,GAIZA,EAAgBqD,WAAUpN,GAAOA,EAAI6G,QAAUiG,EAAQjG,OAAS7G,EAAIE,OAAS4M,EAAQ5M,QAHxFX,QAAQC,IAAI,gDACJ,EAGhB,CAK6B6N,CAAsBP,EAAS/C,GAEhD,OADAiD,EAAQM,OAAOL,EAAU,GAClBD,CACX,CAEI,MAAO,IAAInV,EAAMiV,EACrB,GAER,UAS2qB,C","sources":["webpack://calculator/./src/pages/hsrCalc/HSRCalc.module.scss?aeb9","webpack://calculator/./src/pages/hsrCalc/results/Results.module.scss?8fc2","webpack://calculator/./src/pages/hsrCalc/results/Results.tsx","webpack://calculator/./src/pages/hsrCalc/stats/char/CharStats.module.scss?acd7","webpack://calculator/./src/pages/hsrCalc/stats/shared/StatRow.module.scss?402b","webpack://calculator/./src/pages/hsrCalc/stats/shared/CharStatTitles.ts","webpack://calculator/./src/pages/hsrCalc/stats/shared/StatRow.tsx","webpack://calculator/./src/pages/hsrCalc/stats/char/CharStats.tsx","webpack://calculator/./src/pages/hsrCalc/stats/enemy/EnemyStats.tsx","webpack://calculator/./src/pages/hsrCalc/stats/enemy/EnemyStats.module.scss?9ecd","webpack://calculator/./src/pages/hsrCalc/stats/DmgCalculation.ts","webpack://calculator/./src/pages/hsrCalc/dataStore/DataStore.module.scss?0199","webpack://calculator/./src/pages/hsrCalc/services/store/SetupsStorage.ts","webpack://calculator/./src/pages/hsrCalc/dataStore/DataStore.tsx","webpack://calculator/./src/pages/hsrCalc/stats/shared/FilterStack.tsx","webpack://calculator/./src/pages/hsrCalc/stats/shared/FilterStack.module.scss?3b7b","webpack://calculator/./src/pages/hsrCalc/stats/bonuses/BonusSetController.module.scss?b025","webpack://calculator/./src/pages/hsrCalc/stats/bonuses/BonusSetElement.module.scss?639f","webpack://calculator/./src/pages/hsrCalc/stats/bonuses/BonusSetElement.tsx","webpack://calculator/./src/pages/hsrCalc/stats/bonuses/BonusSetController.tsx","webpack://calculator/./src/pages/hsrCalc/HSRCalc.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"calcMainContainer\":\"ehmjDA89\",\"row\":\"amt11bt_\",\"column\":\"FsnFMGRC\"};","// extracted by mini-css-extract-plugin\nexport default {\"resultsMain\":\"A3Hfsa7r\",\"resultRow\":\"BHYZdv6n\",\"attText\":\"wg5y91ca\",\"valueText\":\"jEh6KE4N\"};","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { memo } from 'react';\nimport classes from './Results.module.scss';\nexport const Results = memo((props) => {\n    const attNames = ['Damage', 'Crit.Dmg', 'Avg.Dmg'];\n    return (_jsxs(\"div\", { className: classes.resultsMain, children: [_jsxs(\"div\", { className: classes.resultRow, children: [_jsx(\"p\", { className: classes.attText, children: attNames[0] }), _jsx(\"p\", { className: classes.valueText, children: props.result[0] })] }), _jsxs(\"div\", { className: classes.resultRow, children: [_jsx(\"p\", { className: classes.attText, children: attNames[1] }), _jsx(\"p\", { className: classes.valueText, children: props.result[1] })] }), _jsxs(\"div\", { className: classes.resultRow, style: { borderBottom: 'none' }, children: [_jsx(\"p\", { className: classes.attText, children: attNames[2] }), _jsx(\"p\", { className: classes.valueText, children: props.result[2] })] })] }));\n}, function (prev, next) {\n    if (prev.result[0] !== next.result[0] || prev.result[1] !== next.result[1] || prev.result[2] !== next.result[2]) {\n        return false;\n    }\n    return true;\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"mainContainer\":\"Fw3CYGUT\",\"header\":\"bE4xNV7Y\",\"atkSection\":\"INJcKYES\",\"dmgSrcSection\":\"YasIwRBF\",\"totalStatInfo\":\"iQdbwc3M\"};","// extracted by mini-css-extract-plugin\nexport default {\"statRow\":\"GmOFNj5O\",\"inputSection\":\"E2vIMxre\",\"userInput\":\"Xkfy_Axq\"};","const charTitles = {\n    multiplier: 'Dmg multiplier',\n    crrate: 'Crit. rate%',\n    crdmg: 'Crit.DMG%',\n    baseatk: 'Base Atk',\n    basehp: 'Base HP',\n    basedef: 'Base Def',\n    flatatk: 'Flat Atk',\n    flathp: 'Flat HP',\n    flatdef: 'Flat Def',\n    atkIncrease: 'Atk%',\n    hpIncrease: 'HP%',\n    defIncrease: 'Def%',\n    elemIncrease: 'ElementDmg%',\n    dmgIncrease: 'Dmg%',\n    defIgnore: 'Def Ignore',\n    resPen: 'Res Pen'\n};\nconst enemyTitles = {\n    lvl: 'Level',\n    res: 'Res%',\n    def: 'Defense',\n    defReduction: 'Def reduction%',\n    resReduction: 'Res reduction%',\n    dmgTakenIncrease: 'More DMG taken%',\n    brokenMultiplier: 'Is broken'\n};\nfunction isChar(key) {\n    return (Object.keys(charTitles)).indexOf(key) !== -1;\n}\n;\nfunction isEnemy(key) {\n    return (Object.keys(enemyTitles)).indexOf(key) !== -1;\n}\n;\nexport const getTitle = (key) => {\n    if (isChar(key)) {\n        return charTitles[key];\n    }\n    if (isEnemy(key)) {\n        return enemyTitles[key];\n    }\n    return 'null';\n};\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment, memo, useRef } from 'react';\nimport classes from './StatRow.module.scss';\nimport { getTitle } from './CharStatTitles';\nimport { isPercent } from '@/pages/shared/Stat.types';\nimport { StatInputValidationService, StatKeyValidationService } from '@/pages/shared/StatInputServices';\nimport { PercentFragment } from './PercentFragment';\nexport const StatRow = memo(function StatRow(props) {\n    const isPercents = isPercent(props.statType);\n    let value = isPercents ? parseFloat((props.value * 100).toFixed(2)) : props.value;\n    const inputRef = useRef(null);\n    const keyDownHandler = (e) => {\n        if (!StatKeyValidationService.isValidKeyInput(e.key, isPercents)) {\n            e.preventDefault();\n        }\n    };\n    const changeHandler = (event) => {\n        const validatedInputData = StatInputValidationService.getValidatedStatData(event.target.value, isPercents);\n        event.target.value = validatedInputData.valueAsString;\n        props.changeCallback(props.statType, validatedInputData.valueAsNumber);\n    };\n    const title = getTitle(props.statType);\n    const percentMark = isPercents ? _jsx(PercentFragment, {}) : _jsx(Fragment, {});\n    const inputStyleModifier = isPercents ? undefined : { width: '8em' };\n    return (_jsxs(\"div\", { className: classes.statRow, children: [_jsx(\"p\", { children: title }), _jsxs(\"div\", { className: classes.inputSection, children: [_jsx(\"input\", { ref: inputRef, className: classes.userInput, style: inputStyleModifier, onKeyDown: keyDownHandler, onChange: changeHandler, type: 'number', value: value }), percentMark] })] }));\n}, (prev, next) => {\n    if (prev.value !== next.value || prev.changeCallback !== next.changeCallback) {\n        return false;\n    }\n    return true;\n});\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport classes from './CharStats.module.scss';\nimport { attackTypeValues } from '../../../shared/Stat.types';\nimport { StatRow } from '../shared/StatRow';\nimport { srcTypes, elementDmgTypes } from '../shared/StatDictionaries';\nimport { Character } from './Character';\nexport const CharStats = (props) => {\n    const atkType = props.char.atkType;\n    const srcStat = props.char.srcStat;\n    const element = props.char.element;\n    const charStats = props.char.stats;\n    const charBuffs = props.char.buffs;\n    let dynamic = statOpt(props.char.srcStat);\n    const changeStatHandler = (statKey, value) => {\n        props.onCharChanged(new Character(atkType, element, srcStat, { ...charStats, [statKey]: value }, charBuffs));\n    };\n    const changeBuffsHandler = (buffKey, value) => {\n        props.onCharChanged(new Character(atkType, element, srcStat, charStats, { ...charBuffs, [buffKey]: value }));\n    };\n    let atkTypeSelectOptions = [];\n    for (const atkType of attackTypeValues) {\n        atkTypeSelectOptions.push(_jsx(\"option\", { value: atkType, children: atkType[0].toUpperCase() + atkType.substring(1) }, atkType));\n    }\n    let srcStatSelectOptions = [];\n    for (const srcName of srcTypes) {\n        srcStatSelectOptions.push(_jsx(\"option\", { value: srcName, children: srcName[0].toUpperCase() + srcName.substring(1) }, srcName));\n    }\n    let elementSelectOptions = [];\n    for (const element of elementDmgTypes) {\n        elementSelectOptions.push(_jsx(\"option\", { value: element, children: element[0].toUpperCase() + element.substring(1) }, element));\n    }\n    return (_jsxs(\"div\", { className: classes.mainContainer, children: [_jsx(\"p\", { className: classes.header, children: \"Character:\" }), _jsxs(\"section\", { className: classes.dmgSrcSection, children: [_jsx(\"label\", { htmlFor: 'sourceStat', children: \"Atk type:\" }), _jsx(\"select\", { id: 'sourceStat', value: atkType, onInput: (e) => {\n                            const newAtkType = e.currentTarget.value;\n                            props.onCharChanged(new Character(newAtkType, element, srcStat, charStats, charBuffs));\n                        }, children: atkTypeSelectOptions })] }), _jsxs(\"section\", { className: classes.dmgSrcSection, children: [_jsx(\"label\", { htmlFor: 'sourceStat', children: \"Dmg source:\" }), _jsx(\"select\", { id: 'sourceStat', value: srcStat, onInput: (e) => {\n                            const newSrcStat = e.currentTarget.value;\n                            props.onCharChanged(new Character(atkType, element, newSrcStat, charStats, charBuffs));\n                        }, children: srcStatSelectOptions })] }), _jsxs(\"section\", { className: classes.dmgSrcSection, children: [_jsx(\"label\", { htmlFor: 'elementDmgType', children: \"Element:\" }), _jsx(\"select\", { id: 'elementDmgType', value: element, onInput: (e) => {\n                            const newElement = e.currentTarget.value;\n                            props.onCharChanged(new Character(atkType, newElement, srcStat, charStats, charBuffs));\n                        }, children: elementSelectOptions })] }), _jsxs(\"p\", { className: classes.totalStatInfo, children: [\"Total \", srcStat, \": \", props.char.getCharTotalAtk()] }), _jsx(StatRow, { value: charStats[dynamic['base']], statType: dynamic['base'], changeCallback: changeStatHandler }, 'base'), _jsx(StatRow, { value: charBuffs[dynamic['percent']], statType: dynamic['percent'], type: 'percent', changeCallback: changeBuffsHandler }, 'percent'), _jsx(StatRow, { value: charBuffs[dynamic['flat']], statType: dynamic['flat'], changeCallback: changeBuffsHandler }, 'flat'), _jsx(StatRow, { value: charStats['multiplier'], statType: 'multiplier', type: 'percent', changeCallback: changeStatHandler }, 'multiplier'), _jsx(StatRow, { value: charBuffs['crrate'], statType: 'crrate', type: 'percent', changeCallback: changeBuffsHandler }, 'crrate'), _jsx(StatRow, { value: charBuffs['crdmg'], statType: 'crdmg', type: 'percent', changeCallback: changeBuffsHandler }, 'crdmg'), _jsx(StatRow, { value: charBuffs['dmgIncrease'], statType: 'dmgIncrease', type: 'percent', changeCallback: changeBuffsHandler }, 'dmgIncrease'), _jsx(StatRow, { value: charBuffs['elemIncrease'], statType: 'elemIncrease', type: 'percent', changeCallback: changeBuffsHandler }, 'elemIncrease'), _jsx(StatRow, { value: charBuffs['defIgnore'], statType: 'defIgnore', type: 'percent', changeCallback: changeBuffsHandler }, 'defIgnore'), _jsx(StatRow, { value: charBuffs['resPen'], statType: 'resPen', type: 'percent', changeCallback: changeBuffsHandler }, 'resPen')] }));\n};\nfunction statOpt(statType) {\n    switch (statType) {\n        case 'hp':\n            return {\n                percent: 'hpIncrease',\n                base: 'basehp',\n                flat: 'flathp'\n            };\n        case 'atk':\n            return {\n                percent: 'atkIncrease',\n                base: 'baseatk',\n                flat: 'flatatk'\n            };\n        case 'def':\n            return {\n                percent: 'defIncrease',\n                base: 'basedef',\n                flat: 'flatdef'\n            };\n        default:\n            break;\n    }\n}\n;\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport classes from './EnemyStats.module.scss';\nimport { StatRow } from '../shared/StatRow';\nimport { Enemy } from './Enemy';\nexport const EnemyStats = (props) => {\n    const lvl = props.enemy.lvl;\n    const element = props.enemy.element;\n    const stats = props.enemy.stats;\n    const debuffs = props.enemy.debuffs;\n    const isBroken = props.enemy.isBroken;\n    const changeEnemyLvl = (lvlKey, value) => {\n        props.onChangeCallback(new Enemy(value, element, stats, debuffs, isBroken));\n    };\n    const changeEnemyStats = (statKey, value) => {\n        props.onChangeCallback(new Enemy(lvl, element, { ...stats, [statKey]: value }, debuffs, isBroken));\n    };\n    const changeEnemyDebuff = (debuffKey, value) => {\n        props.onChangeCallback(new Enemy(lvl, element, stats, { ...debuffs, [debuffKey]: value }, isBroken));\n    };\n    const changeEnemyBrokenState = (value) => {\n        props.onChangeCallback(new Enemy(lvl, element, stats, debuffs, value));\n    };\n    return (_jsxs(\"div\", { className: classes.enemyModule, children: [_jsx(\"p\", { className: classes.header, children: \"Enemy:\" }), _jsx(StatRow, { value: lvl, statType: 'lvl', changeCallback: changeEnemyLvl }, 'lvl'), _jsx(StatRow, { value: stats['res'], statType: 'res', type: 'percent', changeCallback: changeEnemyStats }, 'res'), _jsx(StatRow, { value: debuffs['defReduction'], statType: 'defReduction', type: 'percent', changeCallback: changeEnemyDebuff }, 'defReduction'), _jsx(StatRow, { value: debuffs['resReduction'], statType: 'resReduction', type: 'percent', changeCallback: changeEnemyDebuff }, 'resReduction'), _jsx(StatRow, { value: debuffs['dmgTakenIncrease'], statType: 'dmgTakenIncrease', type: 'percent', changeCallback: changeEnemyDebuff }, 'dmgTakenIncrease'), _jsxs(\"section\", { className: classes.enemyBreakSection, children: [_jsx(\"label\", { htmlFor: 'isBrokenCheck', children: \"Is enemy broken?\" }), _jsx(\"input\", { id: 'isBrokenCheck', type: 'checkbox', checked: props.enemy.isBroken, onChange: e => {\n                            changeEnemyBrokenState(e.currentTarget.checked);\n                        } })] })] }));\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"enemyModule\":\"pv_lrO39\",\"header\":\"nOoKx0bq\",\"enemyBreakSection\":\"aMElhAzu\"};","function sumByKey(bonuses, key, atkType, elementType) {\n    return bonuses\n        .filter(e => e.key === key &&\n        (e.atkTypeOption === (atkType ?? e.atkTypeOption) || e.atkTypeOption === 'any') &&\n        (e.elemTypeOption === (elementType ?? e.elemTypeOption) || e.elemTypeOption === 'all'))\n        .map(a => a.value)\n        .reduce((prev, curr) => prev + curr, 0);\n}\n//i think it might be calculated when useEffect maybe with atkType and elementType dependency\nexport const dmgResult = (character, enemy, bonuses) => {\n    if (!character || !enemy || !bonuses) {\n        return [0, 0, 0];\n    }\n    const charStats = character.stats;\n    const charBuffs = character.buffs;\n    const enemyStats = enemy.stats;\n    const enemyDebuffs = enemy.debuffs;\n    const brokenMultiplier = enemy.isBroken ? 1 : 0.9;\n    const AttackerLvl = 80;\n    const defIncrease = 0;\n    const lvlBreakMultiplier = 3767.5533;\n    const maxThoughness = 420;\n    const maxThoughnessMultiplier = 0.5 + (maxThoughness / 120);\n    const breakBaseDmg = 2 * lvlBreakMultiplier * maxThoughnessMultiplier;\n    const maxHPTarget = 400000;\n    //BASE BONUS\n    const baseBonus = sumByKey(bonuses, `base${character.srcStat}`);\n    const statIncreaseBonus = sumByKey(bonuses, `${character.srcStat}Increase`);\n    const flatBonus = sumByKey(bonuses, `flat${character.srcStat}`);\n    //BASE TOTAL\n    const baseDmg = ((charStats[`base${character.srcStat}`] + baseBonus) * (1 + charBuffs[`${character.srcStat}Increase`] + statIncreaseBonus) + charBuffs[`flat${character.srcStat}`] + flatBonus) * charStats.multiplier;\n    //DMG BONUS\n    const dmgBonus = sumByKey(bonuses, 'dmgIncrease', character.atkType, character.element);\n    const elemBonus = sumByKey(bonuses, 'elemIncrease', character.atkType, character.element);\n    //DMG TOTAL\n    const dmgMultiplier = 1 + charBuffs.dmgIncrease + charBuffs.elemIncrease + dmgBonus + elemBonus;\n    //DEF RED BONUS\n    const defReductionBonus = sumByKey(bonuses, 'defReduction');\n    const defIgnoreBonus = sumByKey(bonuses, 'defIgnore');\n    //DEF TOTAL\n    let totalDef = enemy.stats.def * (1 + defIncrease - (enemyDebuffs.defReduction + defReductionBonus + charBuffs.defIgnore + defIgnoreBonus));\n    if (totalDef < 0) {\n        totalDef = 0;\n    }\n    const defMultiplier = 1 - (totalDef / (totalDef + 200 + 10 * AttackerLvl));\n    //RES RED BONUS\n    const resPenBonus = sumByKey(bonuses, 'resPen', character.atkType, character.element);\n    const resReductionBonus = sumByKey(bonuses, 'resReduction', character.atkType, character.element);\n    //TOTAL RES\n    let totalRes = enemyStats.res - (enemyDebuffs.resReduction + resReductionBonus) - (charBuffs.resPen + resPenBonus);\n    if (totalRes < -1) {\n        totalRes = -1;\n    }\n    const resMultiplier = 1 - totalRes;\n    //DMG TAKEN BONUS\n    const dmgTakenIncreaseBonus = sumByKey(bonuses, 'dmgTakenIncrease', character.atkType, character.element);\n    //TOTAL DMGTAKEN\n    const dmgTakenMultiplier = 1 + enemyDebuffs.dmgTakenIncrease + dmgTakenIncreaseBonus;\n    //CRRATE BONUS\n    const crRateBonus = sumByKey(bonuses, 'crrate');\n    //TOTAL CRRATE\n    const finalCrRate = (character.buffs.crrate + crRateBonus) > 1 ? 1 : (character.buffs.crrate + crRateBonus);\n    //CRDMG BONUS\n    const crDmgBonus = sumByKey(bonuses, 'crdmg');\n    //TOTAL CRDMG\n    const finalCrDmg = charBuffs.crdmg + crDmgBonus;\n    const dmg = Math.floor(baseDmg * dmgMultiplier * defMultiplier * resMultiplier * dmgTakenMultiplier * brokenMultiplier);\n    const critDmg = Math.floor(dmg * (1 + finalCrDmg));\n    const avgDmg = Math.floor(dmg + (critDmg - dmg) * finalCrRate);\n    return ([dmg, critDmg, avgDmg]);\n    //return [0,0,0];\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"dataStoreModule\":\"S4JsCCMW\",\"headerSection\":\"EvNGSMKL\",\"header\":\"BF3LQWwe\",\"statusText\":\"uFyQc1uJ\",\"saveSection\":\"cYnI8pBL\",\"inputSave\":\"XGBjHG1u\",\"loadSection\":\"ZkziKZdr\",\"loadSectionButtons\":\"PW_9OVG_\"};","import { Character } from \"../../stats/char/Character\";\nimport { Enemy } from \"../../stats/enemy/Enemy\";\nexport const lsSetupsKey = 'setups';\nexport function getSetups() {\n    const setups = localStorage.getItem(lsSetupsKey);\n    if (!setups) {\n        console.log('There is no setups yet');\n        return {};\n    }\n    const parsedSetups = JSON.parse(setups);\n    if (!parsedSetups || Object.keys(parsedSetups).length === 0) {\n        console.log('There is no setups yet');\n        return {};\n    }\n    return parsedSetups;\n}\nexport function parseToSetup(setup) {\n    const char = setup.char;\n    const enemy = setup.enemy;\n    const newCharInstance = new Character(char.atkType, char.element, char.srcStat, char.stats, char.buffs);\n    const newEnemyInstance = new Enemy(enemy.lvl, enemy.element, enemy.stats, enemy.debuffs, enemy.isBroken);\n    return { char: newCharInstance, enemy: newEnemyInstance };\n}\nexport function saveSetupToFile(file) {\n    const url = window.URL.createObjectURL(file);\n    const aElement = document.createElement(\"a\");\n    aElement.setAttribute('style', \"display: none\");\n    aElement.href = url;\n    aElement.download = file.name;\n    aElement.click();\n    window.URL.revokeObjectURL(url);\n    aElement.remove();\n}\nexport function readSetupFile(file) {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onloadend = (e) => {\n            const content = e.target.result;\n            resolve(content);\n        };\n        reader.onerror = (e) => {\n            reject(e);\n        };\n        reader.readAsText(file);\n    });\n}\nexport function importSetupFile(multiple = false, timeout = 10) {\n    const input = document.createElement(\"input\");\n    input.type = \"file\";\n    input.accept = \".json\";\n    input.multiple = multiple;\n    input.click();\n    let timerID;\n    return new Promise((resolve, reject) => {\n        input.addEventListener(\"change\", () => resolve(input.files));\n        input.addEventListener(\"cancel\", () => resolve(null));\n        timerID = setTimeout(() => { reject(); }, timeout * 1000);\n    })\n        .finally(() => {\n        input.remove();\n        clearTimeout(timerID);\n    });\n}\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { memo, useRef, useState } from 'react';\nimport classes from './DataStore.module.scss';\nimport { lsSetupsKey, getSetups, parseToSetup, saveSetupToFile, importSetupFile, readSetupFile } from '../services/store/SetupsStorage';\nfunction buildOptionElements(obj) {\n    if (!obj) {\n        return [];\n    }\n    const newOptions = [];\n    for (const name of Object.keys(obj).sort()) {\n        newOptions.push(_jsx(\"option\", { className: classes.options, children: name }, name));\n    }\n    return newOptions;\n}\nfunction isSetupsEmpty(setups) {\n    return Object.keys(setups).length === 0;\n}\nexport const DataStore = memo((props) => {\n    const lsSetupsObj = JSON.parse(localStorage[lsSetupsKey] ?? null);\n    const [options, setOptions] = useState(buildOptionElements(lsSetupsObj));\n    const saveInputRef = useRef(null);\n    const selectorRef = useRef(null);\n    const statusRef = useRef(null);\n    const saveHandler = () => {\n        const input = saveInputRef.current;\n        if (input && input.value !== '') {\n            let setupsObj = getSetups();\n            const confirmOnMatch = setupsObj[input.value] && confirm('This name already exists. Do you want to override?');\n            const noMatch = !setupsObj[input.value];\n            if (confirmOnMatch || noMatch) {\n                setupsObj[input.value] = {\n                    char: props.char.getCharObj(),\n                    enemy: props.enemy.getEnemyObj()\n                };\n                const lsNewItem = JSON.stringify(setupsObj);\n                localStorage.setItem(lsSetupsKey, lsNewItem);\n                setOptions(buildOptionElements(setupsObj));\n                saveInputRef.current.value = '';\n                statusRef.current.textContent = 'Saved';\n                const idInterval = setTimeout(() => {\n                    statusRef.current.textContent = '';\n                    clearTimeout(idInterval);\n                }, 1500);\n            }\n        }\n    };\n    const loadHandler = () => {\n        const selector = selectorRef.current;\n        let setupsObj = getSetups();\n        if (isSetupsEmpty(setupsObj) || !selector.value || selector.value === '') {\n            return;\n        }\n        const setup = parseToSetup(setupsObj[selector.value]);\n        if (setup.char && setup.enemy) {\n            props.loadCallback(setup.char, setup.enemy);\n        }\n    };\n    const deleteHandler = () => {\n        const selector = selectorRef.current;\n        let setupsObj = getSetups();\n        if (isSetupsEmpty(setupsObj) || !selector.value || selector.value === '') {\n            return;\n        }\n        if (confirm(`Selected setup \"${selector.value}\" will be deleted. Are you sure?`)) {\n            delete setupsObj[selector.value];\n            const jsonSetups = JSON.stringify(setupsObj);\n            localStorage.setItem(lsSetupsKey, jsonSetups);\n            setOptions(buildOptionElements(setupsObj));\n        }\n    };\n    const saveToFileHandler = () => {\n        const setups = getSetups();\n        if (isSetupsEmpty(setups)) {\n            return;\n        }\n        const setupsString = JSON.stringify(setups);\n        let file = new File([setupsString], 'setups.json', { type: \"text/plain:charset=UTF-8\" });\n        saveSetupToFile(file);\n    };\n    const importDataHandler = async (event) => {\n        event.persist();\n        let files = undefined;\n        try {\n            files = await importSetupFile(false, 600);\n        }\n        catch (e) {\n            alert(e);\n        }\n        if (!files || !files[0]) {\n            return;\n        }\n        let setupsObj = getSetups();\n        let importedSetups;\n        try {\n            importedSetups = await readSetupFile(files[0]);\n        }\n        catch (e) {\n            alert(e);\n        }\n        if (importedSetups.length === 0) {\n            alert('There is nothing to import');\n            return;\n        }\n        let parsedSetups;\n        try {\n            parsedSetups = JSON.parse(importedSetups);\n        }\n        catch (e) {\n            alert('Wrong type of file!');\n            return;\n        }\n        if (confirm('Do you want to SAVE all your previous setups?\\n\"OK\" to ADD new setups, \"Cancel\" to CLEAR and ADD')) {\n            const doRewriteItems = confirm('Do you want to override setups if when conflict?\\n\"Cancel\" to add with new names');\n            for (const setup in parsedSetups) {\n                let newKey = setup;\n                if (!doRewriteItems) {\n                    let reserveIndex = 0;\n                    while (setupsObj[newKey]) {\n                        if (reserveIndex > 999) {\n                            throw new Error('Something went wrong with indexing new setup');\n                        }\n                        reserveIndex++;\n                        newKey = setup.concat('(', reserveIndex.toString(), ')');\n                    }\n                }\n                setupsObj[newKey] = parsedSetups[setup];\n            }\n        }\n        else {\n            setupsObj = {};\n            for (const setup in parsedSetups) {\n                setupsObj[setup] = parsedSetups[setup];\n            }\n        }\n        const lsNewItem = JSON.stringify(setupsObj);\n        localStorage.setItem(lsSetupsKey, lsNewItem);\n        setOptions(buildOptionElements(setupsObj));\n    };\n    return (_jsxs(\"div\", { className: classes.dataStoreModule, children: [_jsxs(\"div\", { className: classes.headerSection, children: [_jsx(\"p\", { className: classes.header, children: \"Save/Load:\" }), _jsx(\"div\", { ref: statusRef, className: classes.statusText })] }), _jsxs(\"div\", { className: classes.saveSection, children: [_jsx(\"input\", { ref: saveInputRef, maxLength: 20, className: classes.inputSave }), _jsx(\"button\", { onClick: saveHandler, children: \"Save\" })] }), _jsxs(\"div\", { className: classes.loadSection, children: [_jsxs(\"select\", { ref: selectorRef, className: classes.loadSelector, disabled: options.length === 0, defaultValue: '', children: [_jsx(\"option\", { value: '', disabled: true, hidden: true, children: \"-select setup-\" }), options] }), _jsxs(\"section\", { className: classes.loadSectionButtons, children: [_jsx(\"button\", { onClick: deleteHandler, children: \"Delete\" }), _jsx(\"button\", { onClick: loadHandler, children: \"Load\" })] })] }), _jsxs(\"div\", { className: classes.importExportSection, children: [_jsx(\"button\", { onClick: importDataHandler, children: \"Import\" }), _jsx(\"button\", { onClick: saveToFileHandler, children: \"Export\" }), _jsx(\"button\", { onClick: () => localStorage.clear(), children: \"Clear\" })] })] }));\n});\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useState } from 'react';\nimport classes from './FilterStack.module.scss';\nexport const FilterStack = (props) => {\n    const [activeFilter, setActiveFilter] = useState([]);\n    const toggleHandler = (e) => {\n        const value = e.currentTarget.value;\n        if (!value)\n            throw new Error('Invalid group type of bonus sets');\n        if (activeFilter.includes(value)) {\n            setActiveFilter((prev) => {\n                return prev.filter(e => e !== value);\n            });\n        }\n        else {\n            setActiveFilter((prev) => {\n                return [...prev, value];\n            });\n        }\n    };\n    const buttons = props.contents.map(content => {\n        const style = activeFilter.includes(content) ? { border: '1px solid white' } : undefined;\n        return (_jsx(\"button\", { value: content, style: style, onClick: toggleHandler, children: content[0].toUpperCase() + content.slice(1) }, content));\n    });\n    useEffect(() => {\n        props.updateCallback(activeFilter);\n    }, [activeFilter]);\n    return (_jsx(\"div\", { className: classes.filterStackContainer, children: buttons }));\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filterStackContainer\":\"YomG6n9_\"};","// extracted by mini-css-extract-plugin\nexport default {\"bonusControllerContainer\":\"AymoXQsh\",\"headerSection\":\"wnqXDxEQ\",\"header\":\"ImEHLTHY\",\"controlsPanel\":\"VZ3hsHL4\",\"bonusSetList\":\"mkjP3Iwg\",\"bonusSetsSection\":\"s378RR0r\"};","// extracted by mini-css-extract-plugin\nexport default {\"bonusSetContainer\":\"pxYAhcR9\",\"headerSection\":\"wnGHKlpt\",\"titles\":\"f3b4cpMX\",\"group\":\"RlYXbXFG\",\"header\":\"F4yNleMb\",\"controlButtonsSection\":\"Mc8ryBNI\",\"controlButton\":\"zylh9UdU\",\"bonusesPreviewList\":\"K05DrzJz\",\"bonus\":\"y7JHXhWu\"};","import { jsxs as _jsxs, jsx as _jsx } from \"react/jsx-runtime\";\nimport classes from './BonusSetElement.module.scss';\nimport { Fragment, useEffect, useState } from 'react';\nimport { isPercent } from '@/pages/shared/Stat.types';\nimport local from '@/pages/shared/StatDictionary';\nexport const BonusSetElement = (props) => {\n    const [isMinimized, setIsMinimized] = useState(true);\n    const [active, setActive] = useState(true);\n    let bonusSetColumns = [];\n    useEffect(() => {\n        props.hideBonusCallback({ group: props.group, name: props.title }, active);\n    }, [active]);\n    for (const bonus of props.set) {\n        const optionOneText = !bonus.atkTypeOption || bonus.atkTypeOption === 'any' || bonus.atkTypeOption === 'none' ? '' : local['en'][bonus.atkTypeOption];\n        const optionTwoText = !bonus.elemTypeOption || bonus.elemTypeOption === 'all' || bonus.elemTypeOption == 'none' ? '' : local['en'][bonus.elemTypeOption];\n        const optionsText = optionOneText === '' && optionTwoText === '' ? '' : `(${optionTwoText} ${optionOneText})`;\n        const isPercents = isPercent(bonus.key);\n        let value = isPercents ? parseFloat((bonus.value * 100).toFixed(2)) : bonus.value;\n        bonusSetColumns.push((_jsxs(\"div\", { className: classes.bonus, children: [_jsxs(\"p\", { className: classes.bonusDesc, children: [\"+\", local['en'][bonus.key], \" \", optionsText, \":\"] }), _jsxs(\"p\", { className: classes.bonusValue, children: [value, isPercents ? '%' : ''] })] }, bonus.key + bonus.id + '_bonus')));\n    }\n    return (_jsxs(\"div\", { className: classes.bonusSetContainer, children: [_jsxs(\"div\", { className: classes.headerSection, children: [_jsxs(\"div\", { className: classes.titles, children: [_jsxs(\"p\", { className: classes.group, children: [local['en'][props.group], props.group?.length > 0 ? ':' : ''] }), _jsx(\"p\", { className: classes.header, children: props.title })] }), _jsxs(\"div\", { className: classes.controlButtonsSection, children: [_jsx(\"button\", { title: 'Activate or deactivate this bonus', style: active ? undefined : { backgroundColor: 'darkred' }, className: classes.controlButton, onClick: e => setActive(prev => !prev), children: \"\\uD83D\\uDC41\" }, 'deactivateButton'), _jsx(\"button\", { title: 'Minimize or restore details', className: classes.controlButton, onClick: e => setIsMinimized((prev) => !prev), children: \"...\" }, 'showHideButton'), _jsx(\"button\", { title: 'Delete this bonus', className: classes.controlButton, onClick: e => props.deleteCallback(props.group, props.title), children: \"x\" }, 'deleteButton')] })] }), isMinimized ? _jsx(Fragment, {}) : (_jsx(\"div\", { className: classes.bonusesPreviewList, children: bonusSetColumns }))] }));\n};\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { FilterStack } from '../shared/FilterStack';\nimport classes from './BonusSetController.module.scss';\nimport { BonusSetElement } from './BonusSetElement';\nimport { useRef, useState } from 'react';\nimport { getBonusSetObjects } from '@/pages/bonusSetManager/BonusSetManager';\nimport { createOptionsFromList, getSelectorDataBySelected } from '@/pages/bonusSetManager/setSelector/SetSelector';\nfunction parseBonusSetKey(value) {\n    if (!value || value === '')\n        throw new Error('Parse had been failed');\n    const strValues = value.split('/_/');\n    if (strValues.length !== 2)\n        throw new Error('Parse had been failed');\n    //check groupName for type;\n    return { groupName: strValues[0], name: strValues[1] };\n}\nfunction createBonusSetKey(groupName, name) {\n    return `${groupName}/_/${name}`;\n}\nexport const BonusSetController = (props) => {\n    const [filters, setFilters] = useState([]);\n    const selectorRef = useRef(null);\n    const bonusSetList = getBonusSetObjects(); //fix\n    const updateHandler = (filters) => {\n        setFilters(filters);\n    };\n    const loadHandler = () => {\n        const selector = selectorRef.current;\n        if (selector) {\n            const { groupName, value } = getSelectorDataBySelected(selector);\n            const key = createBonusSetKey(groupName, value);\n            if (groupName && value && bonusSetList.get(groupName)) {\n                const selectedObj = bonusSetList.get(groupName)[value];\n                if (selectedObj && !props.bonusSets.get(key)) {\n                    const newSets = new Map(props.bonusSets); // can i do this in other places? create new instance in callback, not in setState after\n                    newSets.set(key, selectedObj);\n                    props.updateCallback(newSets); // in: BonusSets, out BonusSets. instead of useEffect\n                }\n            }\n        }\n    };\n    const deleteHandler = (groupName, value) => {\n        if (groupName.length === 0 || value.length === 0)\n            return;\n        const newSets = new Map(props.bonusSets);\n        if (newSets.delete(createBonusSetKey(groupName, value))) {\n            props.updateCallback(newSets);\n        }\n    };\n    const clearHandler = () => {\n        if (props.bonusSets.size !== 0) {\n            props.updateCallback(new Map());\n        }\n    };\n    const bonusSetElementsList = createOptionsFromList(bonusSetList, filters) ?? [];\n    let currentBonusSets = [];\n    props.bonusSets.forEach((bonusSet, key) => {\n        const { groupName, name } = parseBonusSetKey(key);\n        if (!filters || filters.includes(groupName) || filters.length === 0) {\n            currentBonusSets.push((_jsx(BonusSetElement, { title: name, group: groupName, set: bonusSet, deleteCallback: deleteHandler, hideBonusCallback: props.hideBonusCallback }, key)));\n        }\n    });\n    return (_jsxs(\"div\", { className: classes.bonusControllerContainer, children: [_jsx(\"div\", { className: classes.headerSection, children: _jsx(\"p\", { className: classes.header, children: \"Bonuses:\" }) }), _jsxs(\"div\", { className: classes.controlsPanel, children: [_jsxs(\"select\", { ref: selectorRef, className: classes.bonusSetList, disabled: bonusSetElementsList.length === 0, children: [_jsx(\"option\", { hidden: true, value: 'none', children: bonusSetElementsList.length === 0 ? '-Create bonus set-' : '-Select bonus sets-' }, 'option-none'), bonusSetElementsList] }), _jsxs(\"div\", { className: classes.controlButtonSection, children: [_jsx(\"button\", { onClick: loadHandler, children: \"Load\" }), _jsx(\"button\", { onClick: clearHandler, children: \"Clear\" })] })] }), _jsx(FilterStack, { contents: ['weapon', 'teammate', 'relics', 'planars'], updateCallback: updateHandler }), _jsx(\"div\", { className: classes.bonusSetsSection, children: currentBonusSets })] }));\n};\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useEffect, useRef, useState } from 'react';\nimport classes from './HSRCalc.module.scss';\nimport { Results } from './results/Results';\nimport { CharStats } from './stats/char/CharStats';\nimport { EnemyStats } from './stats/enemy/EnemyStats';\nimport { dmgResult } from './stats/DmgCalculation';\nimport { Character } from './stats/char/Character';\nimport { Enemy } from './stats/enemy/Enemy';\nimport { DataStore } from './dataStore/DataStore';\nimport { parseToSetup } from './services/store/SetupsStorage';\nimport { BonusSetController } from './stats/bonuses/BonusSetController';\nconst lsDefaultUser = 'defaultUserSetup';\nlet calcObjectsState = getSavedState();\nfunction getSavedState() {\n    const setupString = localStorage.getItem(lsDefaultUser);\n    const defaultUserSetup = setupString ? JSON.parse(setupString) : {};\n    if (Object.keys(defaultUserSetup).length !== 0) {\n        const setup = parseToSetup(defaultUserSetup); // this is not setup anymore in terms of functionality. rename\n        return { char: setup.char ?? new Character(), enemy: setup.enemy ?? new Enemy(), bonuses: new Map(defaultUserSetup.bonuses) ?? new Map(), inactives: defaultUserSetup.inactives ?? [] }; // check if it is correct map\n    }\n    return { char: new Character(), enemy: new Enemy(), bonuses: new Map(), inactives: [] };\n}\nconst HSRCalc = () => {\n    const [char, setChar] = useState(calcObjectsState.char);\n    const [enemy, setEnemy] = useState(calcObjectsState.enemy);\n    const [bonusSets, setBonusSets] = useState(calcObjectsState.bonuses); //default? save state between loadings?\n    const [inactiveBonuses, setInactiveBonuses] = useState(calcObjectsState.inactives);\n    let charRef = useRef(char);\n    let enemyRef = useRef(enemy);\n    let bonusRef = useRef(bonusSets);\n    let inactivesRef = useRef(inactiveBonuses);\n    function setDefaultByRef() {\n        const charObj = charRef.current?.getCharObj();\n        const enemyObj = enemyRef.current?.getEnemyObj();\n        const bonusObj = [...bonusRef.current];\n        const inactivesObj = [...inactivesRef.current];\n        localStorage.setItem(lsDefaultUser, JSON.stringify({ char: charObj, enemy: enemyObj, bonus: bonusObj, inactives: inactivesObj }));\n    }\n    useEffect(() => {\n        window.addEventListener(\"beforeunload\", e => {\n            setDefaultByRef();\n            return;\n        });\n        return () => {\n            setDefaultByRef();\n            calcObjectsState = { char: charRef.current, enemy: enemyRef.current, bonuses: bonusRef.current, inactives: inactivesRef.current };\n        };\n    }, []);\n    useEffect(() => {\n        charRef.current = char;\n        enemyRef.current = enemy;\n        bonusRef.current = bonusSets;\n        inactivesRef.current = inactiveBonuses;\n    });\n    function charChangedHandler(newCharStats) {\n        setChar(() => {\n            return newCharStats;\n        });\n    }\n    ;\n    function enemyChangedHanlder(newEnemy) {\n        setEnemy(() => {\n            return newEnemy;\n        });\n    }\n    ;\n    function loadSetupHandler(char, enemy) {\n        charChangedHandler(char);\n        enemyChangedHanlder(enemy);\n    }\n    function loadBonusSetHandler(sets) {\n        setBonusSets(sets);\n    }\n    function findInactiveBonusPath(pathObj, inactiveBonuses) {\n        if (!Array.isArray(inactiveBonuses)) {\n            console.log('Missin array. Source: findInactiveBonusPath');\n            return -1;\n        }\n        return inactiveBonuses.findIndex(obj => obj.group === pathObj.group && obj.name === pathObj.name);\n    }\n    function setInactiveBonusesHandler(pathObj, isActive) {\n        setInactiveBonuses((prev) => {\n            if (isActive) {\n                const newList = [...prev];\n                const objIndex = findInactiveBonusPath(pathObj, inactiveBonuses);\n                newList.splice(objIndex, 1);\n                return newList;\n            }\n            else {\n                return [...prev, pathObj];\n            }\n        });\n    }\n    const allBonuses = [];\n    bonusSets.forEach((set, key) => {\n        const [group, name] = key.split('/_/');\n        if (inactiveBonuses.find(obj => obj.group === group && obj.name === name) === undefined) {\n            allBonuses.push(...set);\n        }\n    });\n    const result = dmgResult(char, enemy, allBonuses);\n    return (_jsx(\"div\", { className: classes.calcMainContainer, children: _jsxs(\"div\", { className: classes.row, children: [_jsx(\"div\", { className: classes.column, children: _jsx(CharStats, { char: char, onCharChanged: charChangedHandler }) }), _jsxs(\"div\", { className: classes.column, children: [_jsx(EnemyStats, { enemy: enemy, onChangeCallback: enemyChangedHanlder }), _jsx(Results, { result: result }), _jsx(DataStore, { char: char, enemy: enemy, loadCallback: loadSetupHandler })] }), _jsx(\"div\", { className: classes.column, children: _jsx(BonusSetController, { bonusSets: bonusSets, updateCallback: loadBonusSetHandler, hideBonusCallback: setInactiveBonusesHandler }) })] }) }));\n};\n// export function getDefaultCharStats(): CharacterStatsType {\n//     return {\n//         multiplier: 0,\n//         hp: 0,\n//         def: 0,\n//         atk: 0,\n//         crrate: 0.05,\n//         crdmg: 0.5,\n//         baseatk: 0,\n//         basehp: 0,\n//         basedef: 0,\n//         flatatk: 0,\n//         flathp: 0,\n//         flatdef: 0,\n//         breakeffect: 0,\n//         atkIncrease: 0,\n//         hpIncrease: 0,\n//         defIncrease: 0,\n//         dmgIncrease: 0,\n//         defIgnore: 0,\n//         resPen: 0\n//     };\n// };\nexport default HSRCalc;\n"],"names":["Results","memo","props","attNames","className","children","result","style","borderBottom","prev","next","charTitles","multiplier","crrate","crdmg","baseatk","basehp","basedef","flatatk","flathp","flatdef","atkIncrease","hpIncrease","defIncrease","elemIncrease","dmgIncrease","defIgnore","resPen","enemyTitles","lvl","res","def","defReduction","resReduction","dmgTakenIncrease","brokenMultiplier","StatRow","isPercents","statType","value","parseFloat","toFixed","inputRef","useRef","title","key","Object","keys","indexOf","isChar","isEnemy","percentMark","PercentFragment","Fragment","inputStyleModifier","undefined","width","ref","onKeyDown","e","isValidKeyInput","preventDefault","onChange","event","validatedInputData","getValidatedStatData","target","valueAsString","changeCallback","valueAsNumber","type","CharStats","atkType","char","srcStat","element","charStats","stats","charBuffs","buffs","dynamic","percent","base","flat","statOpt","changeStatHandler","statKey","onCharChanged","Character","changeBuffsHandler","buffKey","atkTypeSelectOptions","push","toUpperCase","substring","srcStatSelectOptions","srcName","elementSelectOptions","htmlFor","id","onInput","newAtkType","currentTarget","newSrcStat","newElement","getCharTotalAtk","EnemyStats","enemy","debuffs","isBroken","changeEnemyDebuff","debuffKey","onChangeCallback","Enemy","lvlKey","checked","sumByKey","bonuses","elementType","filter","atkTypeOption","elemTypeOption","map","a","reduce","curr","lsSetupsKey","getSetups","setups","localStorage","getItem","console","log","parsedSetups","JSON","parse","length","parseToSetup","setup","buildOptionElements","obj","newOptions","name","sort","options","isSetupsEmpty","DataStore","lsSetupsObj","setOptions","useState","saveInputRef","selectorRef","statusRef","dataStoreModule","headerSection","header","statusText","saveSection","maxLength","inputSave","onClick","input","current","setupsObj","confirmOnMatch","confirm","noMatch","getCharObj","getEnemyObj","lsNewItem","stringify","setItem","textContent","idInterval","setTimeout","clearTimeout","loadSection","loadSelector","disabled","defaultValue","hidden","loadSectionButtons","selector","jsonSetups","loadCallback","importExportSection","async","files","persist","multiple","timeout","document","createElement","timerID","accept","click","Promise","resolve","reject","addEventListener","finally","remove","importSetupFile","alert","importedSetups","file","reader","FileReader","onloadend","content","onerror","readAsText","doRewriteItems","newKey","reserveIndex","Error","concat","toString","setupsString","url","window","URL","createObjectURL","aElement","setAttribute","href","download","revokeObjectURL","saveSetupToFile","File","clear","FilterStack","activeFilter","setActiveFilter","toggleHandler","includes","buttons","contents","border","slice","useEffect","updateCallback","BonusSetElement","isMinimized","setIsMinimized","active","setActive","bonusSetColumns","hideBonusCallback","group","bonus","set","optionOneText","optionTwoText","optionsText","bonusDesc","bonusValue","bonusSetContainer","titles","controlButtonsSection","backgroundColor","controlButton","deleteCallback","bonusesPreviewList","createBonusSetKey","groupName","BonusSetController","filters","setFilters","bonusSetList","getBonusSetObjects","deleteHandler","newSets","Map","bonusSets","delete","bonusSetElementsList","currentBonusSets","forEach","bonusSet","strValues","split","parseBonusSetKey","bonusControllerContainer","controlsPanel","controlButtonSection","get","selectedObj","size","bonusSetsSection","lsDefaultUser","calcObjectsState","setupString","defaultUserSetup","inactives","getSavedState","setChar","setEnemy","setBonusSets","inactiveBonuses","setInactiveBonuses","charRef","enemyRef","bonusRef","inactivesRef","setDefaultByRef","charObj","enemyObj","bonusObj","inactivesObj","charChangedHandler","newCharStats","enemyChangedHanlder","newEnemy","allBonuses","find","character","enemyStats","enemyDebuffs","baseBonus","statIncreaseBonus","flatBonus","baseDmg","dmgBonus","elemBonus","dmgMultiplier","defReductionBonus","defIgnoreBonus","totalDef","defMultiplier","resPenBonus","resReductionBonus","totalRes","resMultiplier","dmgTakenIncreaseBonus","dmgTakenMultiplier","crRateBonus","finalCrRate","crDmgBonus","finalCrDmg","dmg","Math","floor","critDmg","dmgResult","sets","pathObj","isActive","newList","objIndex","Array","isArray","findIndex","findInactiveBonusPath","splice"],"sourceRoot":""}